# CircleCI 2.0 configuration file
version: 2

# Re-usable blocks to reduce boilerplate in job definitions.
references:
  restore_source_code: &restore_source_code
    restore_cache:
      keys:
        - source-code-1.0.0-{{ .Branch }}-{{ .Revision }}
        - source-code-1.0.0-{{ .Branch }}
        - source-code-1.0.0
  restore_dependencies: &restore_dependencies
    restore_cache:
      keys:
        - sbt-ivy2-dependencies-1.0.0-{{ checksum "/tmp/dependencies.cache.tmp" }}
        - sbt-ivy2-dependencies-1.0.0
  setup_dependencies_key: &setup_dependencies_key
    run:
      name: Generate cache key
      command: |
        shasum build.sbt \
          project/plugins.sbt \
          project/build.properties \
          project/Common.scala \
          project/Dependencies.scala > /tmp/dependencies.cache.tmp
  restore_build: &restore_build
    restore_cache:
      keys:
        - sbt-build-1.0.0-{{ .Branch }}-{{ .Revision }}
        - sbt-build-1.0.0

jobs:
  checkout_code:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - checkout
      - save_cache:
          key: source-code-1.0.0-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/workdir

  sbt_dependencies:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - *setup_dependencies_key
      - *restore_dependencies
      - run:
          name: Resolve dependencies
          command: |
            sbt update
      - save_cache:
          paths:
            - ~/.ivy2
            - ~/.sbt
          key: sbt-ivy2-dependencies-1.0.0-{{ checksum "/tmp/dependencies.cache.tmp" }}

  compile:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - *setup_dependencies_key
      - *restore_dependencies
      - *restore_build
      - run:
          name: Compile
          command: ./scripts/compile.sh
      - save_cache:
          paths:
            - ~/workdir/target
            - ~/workdir/project/target
          key: sbt-build-1.0.0-{{ .Branch }}-{{ .Revision }}

  test:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - *setup_dependencies_key
      - *restore_dependencies
      - *restore_build
      - run:
          name: Test
          command: ./scripts/test.sh
      - run:
          name: Store test reports
          working_directory: ~/
          command: |
            mkdir -p ~/coverage-reports/scoverage
            cp -f ~/workdir/target/scala-2.12/coverage-report/cobertura.xml ~/coverage-reports/scoverage/results.xml
      - store_test_results:
          path: ~/coverage-reports
      - store_artifacts:
          path: ~/workdir/target/scala-2.12/coverage-report
      - store_artifacts:
          path: ~/workdir/target/scala-2.12/scoverage-report
      - store_artifacts:
          path: ~/workdir/target/scala-2.12/scoverage-data

  lint:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - *setup_dependencies_key
      - *restore_dependencies
      - *restore_build
      - run:
          name: Lint
          command: ./scripts/lint.sh

  publish:
    docker:
      - image: circleci/openjdk:8-jdk
        environment:
          JAVA_OPTS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1'
    environment:
      # Customize the JVM maximum heap limit
      JAVA_OPTS: -Xmx3200m
    working_directory: ~/workdir
    steps:
      - *restore_source_code
      - *setup_dependencies_key
      - *restore_dependencies
      - *restore_build
      - run:
          name: Publish to JCenter
          command: ./scripts/publish.sh 0.1.$CIRCLE_BUILD_NUM

workflows:
  version: 2
  test-and-publish:
    jobs:
      - checkout_code
      - sbt_dependencies:
          requires:
            - checkout_code
      - compile:
          requires:
            - checkout_code
            - sbt_dependencies
      - test:
          requires:
            - compile
      - lint:
          requires:
            - compile
      - publish:
          type: approval
          requires:
            - test
            - lint
          filters:
            branches:
              only:
                - master
